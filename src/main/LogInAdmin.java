/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.Timer;
import java.util.TimerTask;
/**
 *
 * @author LENOVO
 */
public class LogInAdmin extends javax.swing.JFrame {
    Connection connect = null;
    ResultSet result = null;
    PreparedStatement pst = null;
    
    public LogInAdmin() {
        initComponents();
        // Set Title
        this.setTitle("Office and Class Allocation System");
        // Database Connection
        connect = Database.getConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogInAdminPagePanel = new javax.swing.JPanel();
        Header = new javax.swing.JPanel();
        LogInText = new javax.swing.JTextField();
        BackButton = new javax.swing.JButton();
        LogInFrom = new javax.swing.JPanel();
        Email = new javax.swing.JLabel();
        EmailField = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        ForgotPassword = new javax.swing.JLabel();
        LogInButton = new javax.swing.JButton();
        DontHaveAccount = new javax.swing.JLabel();
        SignUpNow = new javax.swing.JButton();
        Footer = new javax.swing.JPanel();
        DevelopedBy = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        LogInAdminPagePanel.setBackground(new java.awt.Color(54, 79, 107));

        Header.setBackground(new java.awt.Color(63, 193, 201));
        Header.setPreferredSize(new java.awt.Dimension(900, 86));

        LogInText.setEditable(false);
        LogInText.setBackground(new java.awt.Color(63, 193, 201));
        LogInText.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        LogInText.setForeground(new java.awt.Color(255, 255, 255));
        LogInText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        LogInText.setText("Log In");
        LogInText.setBorder(null);
        LogInText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        LogInText.setFocusable(false);
        LogInText.setHighlighter(null);

        BackButton.setBackground(new java.awt.Color(54, 79, 107));
        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-back-32.png"))); // NOI18N
        BackButton.setBorder(null);
        BackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackButton.setPreferredSize(new java.awt.Dimension(35, 35));
        BackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackButtonMouseClicked(evt);
            }
        });
        BackButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BackButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(LogInText, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(LogInText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        LogInFrom.setOpaque(false);
        LogInFrom.setPreferredSize(new java.awt.Dimension(450, 332));

        Email.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        Email.setForeground(new java.awt.Color(245, 245, 245));
        Email.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Email.setText("Email");

        EmailField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        EmailField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        EmailField.setPreferredSize(new java.awt.Dimension(73, 30));
        EmailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EmailFieldFocusGained(evt);
            }
        });

        Password.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        Password.setForeground(new java.awt.Color(245, 245, 245));
        Password.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Password.setText("Password");

        PasswordField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        PasswordField.setPreferredSize(new java.awt.Dimension(90, 30));
        PasswordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PasswordFieldFocusGained(evt);
            }
        });

        ForgotPassword.setForeground(new java.awt.Color(153, 153, 153));
        ForgotPassword.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ForgotPassword.setText("Forgot Password");
        ForgotPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ForgotPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ForgotPasswordMouseClicked(evt);
            }
        });
        ForgotPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ForgotPasswordKeyPressed(evt);
            }
        });

        LogInButton.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        LogInButton.setForeground(new java.awt.Color(54, 79, 107));
        LogInButton.setText("LogIn");
        LogInButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogInButton.setPreferredSize(new java.awt.Dimension(90, 30));
        LogInButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogInButtonMouseClicked(evt);
            }
        });
        LogInButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LogInButtonKeyPressed(evt);
            }
        });

        DontHaveAccount.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        DontHaveAccount.setForeground(new java.awt.Color(153, 153, 153));
        DontHaveAccount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DontHaveAccount.setText("Don't Have Account?");
        DontHaveAccount.setPreferredSize(new java.awt.Dimension(148, 19));

        SignUpNow.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        SignUpNow.setForeground(new java.awt.Color(54, 79, 107));
        SignUpNow.setText("Sign Up");
        SignUpNow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignUpNow.setPreferredSize(new java.awt.Dimension(90, 30));
        SignUpNow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpNowMouseClicked(evt);
            }
        });
        SignUpNow.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SignUpNowKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout LogInFromLayout = new javax.swing.GroupLayout(LogInFrom);
        LogInFrom.setLayout(LogInFromLayout);
        LogInFromLayout.setHorizontalGroup(
            LogInFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogInFromLayout.createSequentialGroup()
                .addGroup(LogInFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LogInFromLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(SignUpNow, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LogInFromLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(LogInFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ForgotPassword)
                            .addGroup(LogInFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Email)
                                .addComponent(EmailField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Password)
                                .addComponent(PasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogInFromLayout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .addGroup(LogInFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogInFromLayout.createSequentialGroup()
                        .addComponent(DontHaveAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogInFromLayout.createSequentialGroup()
                        .addComponent(LogInButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(187, 187, 187))))
        );
        LogInFromLayout.setVerticalGroup(
            LogInFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogInFromLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(Email)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Password)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ForgotPassword)
                .addGap(7, 7, 7)
                .addComponent(LogInButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(DontHaveAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SignUpNow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Footer.setBackground(new java.awt.Color(63, 193, 201));
        Footer.setPreferredSize(new java.awt.Dimension(0, 30));

        DevelopedBy.setEditable(false);
        DevelopedBy.setBackground(new java.awt.Color(63, 193, 201));
        DevelopedBy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        DevelopedBy.setForeground(new java.awt.Color(255, 255, 255));
        DevelopedBy.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        DevelopedBy.setText("Developed By: Hafiz Muhammad Saad");
        DevelopedBy.setBorder(null);
        DevelopedBy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DevelopedBy.setFocusable(false);
        DevelopedBy.setHighlighter(null);

        javax.swing.GroupLayout FooterLayout = new javax.swing.GroupLayout(Footer);
        Footer.setLayout(FooterLayout);
        FooterLayout.setHorizontalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DevelopedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FooterLayout.setVerticalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DevelopedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout LogInAdminPagePanelLayout = new javax.swing.GroupLayout(LogInAdminPagePanel);
        LogInAdminPagePanel.setLayout(LogInAdminPagePanelLayout);
        LogInAdminPagePanelLayout.setHorizontalGroup(
            LogInAdminPagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Footer, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(LogInAdminPagePanelLayout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(LogInFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        LogInAdminPagePanelLayout.setVerticalGroup(
            LogInAdminPagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogInAdminPagePanelLayout.createSequentialGroup()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(LogInFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(Footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LogInAdminPagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LogInAdminPagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SignUpNowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpNowMouseClicked
        // TODO add your handling code here:
        SignUp signup = new SignUp();
        signup.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SignUpNowMouseClicked

    private void LogInButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LogInButtonKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) {
            String email = EmailField.getText();
            String password = String.valueOf(PasswordField.getPassword());
            String status = "Active";

            if (email.equals("") && password.equals("")){
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (email.equals("")) {
                Email.setForeground(Color.RED);
                Password.setForeground(Color.WHITE);
            } else if (password.equals("")) {
                Email.setForeground(Color.WHITE);
                Password.setForeground(Color.RED);
            } else {
                // Main Admin
                String query = "SELECT * FROM `admin` WHERE `email`=? AND `password`=?";
                try {
                    pst = connect.prepareStatement(query);
                    pst.setString(1, email);
                    pst.setString(2, password);

                    result = pst.executeQuery();

                    if (result.next()) {
                        LogInSuccessful loginsuccessful = new LogInSuccessful();
                        loginsuccessful.setVisible(true);
                        new Timer().schedule(new TimerTask() {
                            public void run() {
                                loginsuccessful.dispose();
                                new HomePageAdmin(email).setVisible(true);
                            }
                        }, 1000);

                        this.dispose();
                    } else {
                        LogInFailed loginfailed = new LogInFailed();
                        loginfailed.setVisible(true);
                        new Timer().schedule(new TimerTask() {
                            public void run() {
                                loginfailed.dispose();
                            }
                        }, 1000);
                        EmailField.setText("");
                        PasswordField.setText("");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,ex);
                }

                // Sub Admin
                String querysubadmin = "SELECT * FROM `signup` WHERE `email`=? AND `password`=? AND `status`=?";
                boolean temp = false;
                try {
                    pst = connect.prepareStatement(querysubadmin);
                    pst.setString(1, email);
                    pst.setString(2, password);
                    pst.setString(3, status);

                    result = pst.executeQuery();
                    temp = true;

                    if (temp == true) {
                        if (result.next()) {
                            LogInSuccessful loginsuccessful = new LogInSuccessful();
                            loginsuccessful.setVisible(true);
                            new Timer().schedule(new TimerTask() {
                                public void run() {
                                    loginsuccessful.dispose();
                                    new HomePageSubAdmin(email).setVisible(true);
                                }
                            }, 1000);

                            this.dispose();
                        }
                    } else if (status.equals("In-Active")) {
                        LogInFailed loginfailed = new LogInFailed();
                        loginfailed.setVisible(true);
                        new Timer().schedule(new TimerTask() {
                            public void run() {
                                loginfailed.dispose();
                            }
                        }, 1000);
                        EmailField.setText("");
                        PasswordField.setText("");
                    } else {
                        LogInFailed loginfailed = new LogInFailed();
                        loginfailed.setVisible(true);
                        new Timer().schedule(new TimerTask() {
                            public void run() {
                                loginfailed.dispose();
                            }
                        }, 1000);
                        EmailField.setText("");
                        PasswordField.setText("");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,ex);
                }
            }
        }
    }//GEN-LAST:event_LogInButtonKeyPressed

    private void LogInButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogInButtonMouseClicked
        // TODO add your handling code here:
        String email = EmailField.getText();
        String password = String.valueOf(PasswordField.getPassword());
        String status = "Active";
        
        if (email.equals("") && password.equals("")){
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (email.equals("")) {
            Email.setForeground(Color.RED);
            Password.setForeground(Color.WHITE);
        } else if (password.equals("")) {
            Email.setForeground(Color.WHITE);
            Password.setForeground(Color.RED);
        } else {
            // Main Admin
            String query = "SELECT * FROM `admin` WHERE `email`=? AND `password`=?";
            try {
                pst = connect.prepareStatement(query);
                pst.setString(1, email);
                pst.setString(2, password);
                
                result = pst.executeQuery();
                
                if (result.next()) {
                    LogInSuccessful loginsuccessful = new LogInSuccessful();
                    loginsuccessful.setVisible(true);
                    new Timer().schedule(new TimerTask() {
                        public void run() {
                            loginsuccessful.dispose();
                            new HomePageAdmin(email).setVisible(true);
                        }
                    }, 1000);
                
                    this.dispose();
                } else {
                    LogInFailed loginfailed = new LogInFailed();
                    loginfailed.setVisible(true);
                    new Timer().schedule(new TimerTask() {
                        public void run() {
                            loginfailed.dispose();
                        }
                    }, 1000);
                    EmailField.setText("");
                    PasswordField.setText("");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
            
            // Sub Admin
            String querysubadmin = "SELECT * FROM `signup` WHERE `email`=? AND `password`=? AND `status`=?";
            boolean temp = false;
            try {
                pst = connect.prepareStatement(querysubadmin);
                pst.setString(1, email);
                pst.setString(2, password);
                pst.setString(3, status);
                
                result = pst.executeQuery();
                temp = true;
                
                if (temp == true) {
                    if (result.next()) {
                        LogInSuccessful loginsuccessful = new LogInSuccessful();
                        loginsuccessful.setVisible(true);
                        new Timer().schedule(new TimerTask() {
                            public void run() {
                                loginsuccessful.dispose();
                                new HomePageSubAdmin(email).setVisible(true);
                            }
                        }, 1000);

                        this.dispose();
                    }
                } else if (status.equals("In-Active")) {
                    LogInFailed loginfailed = new LogInFailed();
                    loginfailed.setVisible(true);
                    new Timer().schedule(new TimerTask() {
                        public void run() {
                            loginfailed.dispose();
                        }
                    }, 1000);
                    EmailField.setText("");
                    PasswordField.setText("");
                } else {
                    LogInFailed loginfailed = new LogInFailed();
                    loginfailed.setVisible(true);
                    new Timer().schedule(new TimerTask() {
                        public void run() {
                            loginfailed.dispose();
                        }
                    }, 1000);
                    EmailField.setText("");
                    PasswordField.setText("");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
        }
    }//GEN-LAST:event_LogInButtonMouseClicked

    private void SignUpNowKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SignUpNowKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            SignUp signup = new SignUp();
            signup.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_SignUpNowKeyPressed

    private void ForgotPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForgotPasswordMouseClicked
        // TODO add your handling code here:
        ForgotPassword forgot = new ForgotPassword();
        forgot.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ForgotPasswordMouseClicked

    private void ForgotPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ForgotPasswordKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ForgotPassword forgot = new ForgotPassword();
            forgot.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_ForgotPasswordKeyPressed

    private void BackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseClicked
        // TODO add your handling code here:
        HomePage homepage = new HomePage();
        homepage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackButtonMouseClicked

    private void BackButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BackButtonKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            HomePage homepage = new HomePage();
            homepage.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_BackButtonKeyPressed

    private void EmailFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFieldFocusGained
        // TODO add your handling code here:
        Email.setForeground(Color.WHITE);
    }//GEN-LAST:event_EmailFieldFocusGained

    private void PasswordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordFieldFocusGained
        // TODO add your handling code here:
        Password.setForeground(Color.WHITE);
    }//GEN-LAST:event_PasswordFieldFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogInAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogInAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogInAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogInAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogInAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTextField DevelopedBy;
    private javax.swing.JLabel DontHaveAccount;
    private javax.swing.JLabel Email;
    private javax.swing.JTextField EmailField;
    private javax.swing.JPanel Footer;
    private javax.swing.JLabel ForgotPassword;
    private javax.swing.JPanel Header;
    private javax.swing.JPanel LogInAdminPagePanel;
    private javax.swing.JButton LogInButton;
    private javax.swing.JPanel LogInFrom;
    private javax.swing.JTextField LogInText;
    private javax.swing.JLabel Password;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JButton SignUpNow;
    // End of variables declaration//GEN-END:variables
}
