/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author LENOVO
 */
public class UpdateAdmin extends javax.swing.JFrame {
    Connection connect = null;
    ResultSet result = null;
    PreparedStatement pst = null;
    
    boolean temp = true;
    
    String status;
    public UpdateAdmin() {
        initComponents();
        // Set Title
        this.setTitle("Office and Class Allocation System");
        // Database Connection
        connect = Database.getConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UpdateAdminPanel = new javax.swing.JPanel();
        Header = new javax.swing.JPanel();
        Field = new javax.swing.JLabel();
        LogoutButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        UpdateRecordForm = new javax.swing.JPanel();
        ID = new javax.swing.JLabel();
        IDField = new javax.swing.JTextField();
        FirstName = new javax.swing.JLabel();
        FirstNameField = new javax.swing.JTextField();
        LastName = new javax.swing.JLabel();
        LastNameField = new javax.swing.JTextField();
        PhoneNo = new javax.swing.JLabel();
        PhoneNoField = new javax.swing.JTextField();
        Gender = new javax.swing.JComboBox<>();
        Status = new javax.swing.JLabel();
        Active = new javax.swing.JRadioButton();
        Inactive = new javax.swing.JRadioButton();
        CNIC = new javax.swing.JLabel();
        CNICField = new javax.swing.JTextField();
        Email = new javax.swing.JLabel();
        EmailField = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        UpdateRecord = new javax.swing.JButton();
        Footer = new javax.swing.JPanel();
        DevelopedBy = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        UpdateAdminPanel.setBackground(new java.awt.Color(54, 79, 107));
        UpdateAdminPanel.setPreferredSize(new java.awt.Dimension(900, 500));

        Header.setBackground(new java.awt.Color(63, 193, 201));
        Header.setPreferredSize(new java.awt.Dimension(900, 86));

        Field.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Field.setForeground(new java.awt.Color(245, 245, 245));
        Field.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Field.setText("Admin");

        LogoutButton.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        LogoutButton.setForeground(new java.awt.Color(54, 79, 107));
        LogoutButton.setText("Logout");
        LogoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogoutButton.setPreferredSize(new java.awt.Dimension(90, 30));
        LogoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutButtonMouseClicked(evt);
            }
        });
        LogoutButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LogoutButtonKeyPressed(evt);
            }
        });

        BackButton.setBackground(new java.awt.Color(54, 79, 107));
        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-back-32.png"))); // NOI18N
        BackButton.setBorder(null);
        BackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackButton.setPreferredSize(new java.awt.Dimension(35, 35));
        BackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackButtonMouseClicked(evt);
            }
        });
        BackButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BackButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addComponent(Field, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 728, Short.MAX_VALUE)))
                .addContainerGap())
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Field)
                .addContainerGap())
        );

        UpdateRecordForm.setOpaque(false);
        UpdateRecordForm.setPreferredSize(new java.awt.Dimension(470, 330));

        ID.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        ID.setForeground(new java.awt.Color(245, 245, 245));
        ID.setText("ID");

        IDField.setForeground(new java.awt.Color(153, 153, 153));
        IDField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IDField.setText("Enter ID to Search");
        IDField.setPreferredSize(new java.awt.Dimension(64, 30));
        IDField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                IDFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                IDFieldFocusLost(evt);
            }
        });
        IDField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IDFieldKeyPressed(evt);
            }
        });

        FirstName.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        FirstName.setForeground(new java.awt.Color(245, 245, 245));
        FirstName.setText("First Name");

        FirstNameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        FirstNameField.setMinimumSize(new java.awt.Dimension(64, 30));
        FirstNameField.setPreferredSize(new java.awt.Dimension(64, 30));
        FirstNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FirstNameFieldFocusLost(evt);
            }
        });

        LastName.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        LastName.setForeground(new java.awt.Color(245, 245, 245));
        LastName.setText("Last Name");

        LastNameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LastNameField.setMinimumSize(new java.awt.Dimension(64, 30));
        LastNameField.setPreferredSize(new java.awt.Dimension(64, 30));
        LastNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                LastNameFieldFocusLost(evt);
            }
        });

        PhoneNo.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        PhoneNo.setForeground(new java.awt.Color(245, 245, 245));
        PhoneNo.setText("Phone No");

        PhoneNoField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        PhoneNoField.setMinimumSize(new java.awt.Dimension(64, 30));
        PhoneNoField.setPreferredSize(new java.awt.Dimension(64, 30));
        PhoneNoField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PhoneNoFieldFocusLost(evt);
            }
        });

        Gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female" }));
        Gender.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Gender.setPreferredSize(new java.awt.Dimension(64, 30));

        Status.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        Status.setForeground(new java.awt.Color(245, 245, 245));
        Status.setText("Status");

        Active.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Active.setForeground(new java.awt.Color(245, 245, 245));
        Active.setText("Active");
        Active.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActiveMouseClicked(evt);
            }
        });
        Active.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ActiveKeyPressed(evt);
            }
        });

        Inactive.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Inactive.setForeground(new java.awt.Color(245, 245, 245));
        Inactive.setText("In-Active");
        Inactive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InactiveMouseClicked(evt);
            }
        });
        Inactive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InactiveKeyPressed(evt);
            }
        });

        CNIC.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        CNIC.setForeground(new java.awt.Color(245, 245, 245));
        CNIC.setText("CNIC");

        CNICField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        CNICField.setMinimumSize(new java.awt.Dimension(64, 30));
        CNICField.setPreferredSize(new java.awt.Dimension(64, 30));
        CNICField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CNICFieldFocusLost(evt);
            }
        });

        Email.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        Email.setForeground(new java.awt.Color(245, 245, 245));
        Email.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Email.setText("Email");

        EmailField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        EmailField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        EmailField.setPreferredSize(new java.awt.Dimension(64, 30));
        EmailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                EmailFieldFocusLost(evt);
            }
        });

        Password.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        Password.setForeground(new java.awt.Color(245, 245, 245));
        Password.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Password.setText("Password");

        PasswordField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        PasswordField.setMinimumSize(new java.awt.Dimension(64, 30));
        PasswordField.setPreferredSize(new java.awt.Dimension(90, 30));

        UpdateRecord.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        UpdateRecord.setForeground(new java.awt.Color(54, 79, 107));
        UpdateRecord.setText("Update Record");
        UpdateRecord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UpdateRecord.setPreferredSize(new java.awt.Dimension(74, 30));
        UpdateRecord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateRecordMouseClicked(evt);
            }
        });
        UpdateRecord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UpdateRecordKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout UpdateRecordFormLayout = new javax.swing.GroupLayout(UpdateRecordForm);
        UpdateRecordForm.setLayout(UpdateRecordFormLayout);
        UpdateRecordFormLayout.setHorizontalGroup(
            UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                .addGap(363, 363, 363)
                .addComponent(UpdateRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                        .addComponent(Status)
                        .addGap(18, 18, 18)
                        .addComponent(Active)
                        .addGap(32, 32, 32)
                        .addComponent(Inactive)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                        .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                                .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                                        .addComponent(FirstName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(LastName)
                                        .addGap(129, 129, 129))
                                    .addComponent(PhoneNo)
                                    .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                                        .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(PhoneNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(IDField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(FirstNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                        .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(LastNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Gender, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(52, 52, 52)))
                                .addGap(81, 81, 81)
                                .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Email)
                                    .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpdateRecordFormLayout.createSequentialGroup()
                                            .addComponent(Password)
                                            .addGap(243, 243, 243))
                                        .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                                .addComponent(ID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CNIC)
                                    .addComponent(CNICField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(30, 30, 30))))
        );
        UpdateRecordFormLayout.setVerticalGroup(
            UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                        .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                                .addComponent(ID)
                                .addGap(37, 37, 37))
                            .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                                .addComponent(CNIC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CNICField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                                .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FirstName)
                                    .addComponent(LastName))
                                .addGap(6, 6, 6)
                                .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                                .addComponent(Email)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PhoneNo)
                        .addGap(12, 12, 12)
                        .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PhoneNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(UpdateRecordFormLayout.createSequentialGroup()
                        .addComponent(Password)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UpdateRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Active)
                        .addComponent(Inactive))
                    .addComponent(Status))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(UpdateRecord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Footer.setBackground(new java.awt.Color(63, 193, 201));
        Footer.setPreferredSize(new java.awt.Dimension(0, 30));

        DevelopedBy.setEditable(false);
        DevelopedBy.setBackground(new java.awt.Color(63, 193, 201));
        DevelopedBy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        DevelopedBy.setForeground(new java.awt.Color(255, 255, 255));
        DevelopedBy.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        DevelopedBy.setText("Developed By: Hafiz Muhammad Saad");
        DevelopedBy.setBorder(null);
        DevelopedBy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DevelopedBy.setFocusable(false);
        DevelopedBy.setHighlighter(null);

        javax.swing.GroupLayout FooterLayout = new javax.swing.GroupLayout(Footer);
        Footer.setLayout(FooterLayout);
        FooterLayout.setHorizontalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DevelopedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FooterLayout.setVerticalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DevelopedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout UpdateAdminPanelLayout = new javax.swing.GroupLayout(UpdateAdminPanel);
        UpdateAdminPanel.setLayout(UpdateAdminPanelLayout);
        UpdateAdminPanelLayout.setHorizontalGroup(
            UpdateAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateAdminPanelLayout.createSequentialGroup()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(Footer, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(UpdateAdminPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(UpdateRecordForm, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UpdateAdminPanelLayout.setVerticalGroup(
            UpdateAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateAdminPanelLayout.createSequentialGroup()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(UpdateRecordForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(Footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(UpdateAdminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(UpdateAdminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutButtonMouseClicked
        // TODO add your handling code here:
        HomePage homepage = new HomePage();
        homepage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutButtonMouseClicked

    private void LogoutButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LogoutButtonKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            HomePage homepage = new HomePage();
            homepage.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_LogoutButtonKeyPressed

    private void IDFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDFieldFocusGained
        // TODO add your handling code here:
        if (IDField.getText().trim().equals("Enter ID to Search")) {
            IDField.setText("");
            IDField.setForeground(new Color(153,153,153));
        }
        IDField.setForeground(Color.BLACK);
    }//GEN-LAST:event_IDFieldFocusGained

    private void IDFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDFieldFocusLost
        // TODO add your handling code here:
        if (IDField.getText().trim().equals("")) {
            IDField.setText("Enter ID to Search");
            IDField.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_IDFieldFocusLost

    private void BackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseClicked
        // TODO add your handling code here:
        AdminPage adminpage = new AdminPage();
        adminpage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackButtonMouseClicked

    private void BackButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BackButtonKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            AdminPage adminpage = new AdminPage();
            adminpage.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_BackButtonKeyPressed

    private void ActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActiveMouseClicked
        // TODO add your handling code here:
        status = "Active";
        Active.setSelected(true);
        Inactive.setSelected(false);
    }//GEN-LAST:event_ActiveMouseClicked

    private void ActiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ActiveKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            status = "Active";
            Active.setSelected(true);
            Inactive.setSelected(false);
        }
    }//GEN-LAST:event_ActiveKeyPressed

    private void InactiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InactiveMouseClicked
        // TODO add your handling code here:
        status = "In-Active";
        Active.setSelected(false);
        Inactive.setSelected(true);
    }//GEN-LAST:event_InactiveMouseClicked

    private void InactiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InactiveKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            status = "In-Active";
            Active.setSelected(false);
            Inactive.setSelected(true);
        }
    }//GEN-LAST:event_InactiveKeyPressed

    private void IDFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) {
            String Admin_ID = IDField.getText();
            try {
                String query = "SELECT * FROM `signup` WHERE `Admin_ID` = ?";
                pst = connect.prepareStatement(query);
                pst.setString(1, Admin_ID);
                result = pst.executeQuery();
                if (result.next()) {
                    FirstNameField.setText(result.getString(2));
                    LastNameField.setText(result.getString(3));
                    CNICField.setText(result.getString(4));
                    PhoneNoField.setText(result.getString(5));
                    Gender.setSelectedItem(result.getString(6));
                    if(result.getString(11).equals("Active")) {
                        Active.setSelected(true);
                        Inactive.setSelected(false);
                    } else if(result.getString(11).equals("In-Active")) {
                        Active.setSelected(false);
                        Inactive.setSelected(true);
                    }
                    EmailField.setText(result.getString(9));
                    PasswordField.setText(result.getString(10));
                } else {
                    IDNotFound idnotfound = new IDNotFound();
                    idnotfound.setVisible(true);
                    new Timer().schedule(new TimerTask() {
                        public void run() {
                            idnotfound.dispose();
                        }
                    }, 1000);
                    
                    FirstNameField.setText("");
                    LastNameField.setText("");
                    CNICField.setText("");
                    PhoneNoField.setText("");
                    Gender.setSelectedItem("Select Gender");
                    Active.setSelected(false);
                    Inactive.setSelected(false);
                    EmailField.setText("");
                    PasswordField.setText("");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
        }
    }//GEN-LAST:event_IDFieldKeyPressed

    private void UpdateRecordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateRecordMouseClicked
        // TODO add your handling code here:
        String Admin_ID = IDField.getText();
        String fName = FirstNameField.getText();
        String lName = LastNameField.getText();
        String cnic = CNICField.getText();
        String phoneno = PhoneNoField.getText();
        String gender = (String)Gender.getSelectedItem();
        String email = EmailField.getText();
        String password = PasswordField.getText();
        String value11 = status;
        
        if (fName.equals("") || lName.equals("") || cnic.equals("") || phoneno.equals("") || gender.equals("Select Gender") || email.equals("") || password.equals("")){
            FirstName.setForeground(Color.RED);
            LastName.setForeground(Color.RED);
            CNIC.setForeground(Color.RED);
            PhoneNo.setForeground(Color.RED);
            Gender.setBackground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (lName.equals("") || cnic.equals("") || phoneno.equals("") || gender.equals("Select Gender") || email.equals("") || password.equals("")){
            LastName.setForeground(Color.RED);
            CNIC.setForeground(Color.RED);
            PhoneNo.setForeground(Color.RED);
            Gender.setBackground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if(cnic.equals("") || phoneno.equals("") || gender.equals("Select Gender") || email.equals("") || password.equals("")){
            CNIC.setForeground(Color.RED);
            PhoneNo.setForeground(Color.RED);
            Gender.setBackground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if(phoneno.equals("") && gender.equals("Select Gender") || email.equals("") || password.equals("")){
            PhoneNo.setForeground(Color.RED);
            Gender.setBackground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);  
        } else if(gender.equals("Select Gender") || email.equals("") || password.equals("")){
            Gender.setBackground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if(email.equals("") || password.equals("")){
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if(password.equals("")){
            Password.setForeground(Color.RED);
        } else {
            if (temp == true) {
                String query = "UPDATE `signup` SET `Admin_ID`='"+Admin_ID+"',`fName`='"+fName+"',`lName`='"+lName+"',`cnic`='"+cnic+"',`phoneno`='"+phoneno+"',`gender`='"+gender+"',`email`='"+email+"',`password`='"+password+"',`status`='"+value11+"' WHERE `Admin_ID`='"+Admin_ID+"'";
                try {
                    pst = connect.prepareStatement(query);

                    pst.execute();
                    UpdateSuccessful updatesuccessful = new UpdateSuccessful();
                    updatesuccessful.setVisible(true);
                    new Timer().schedule(new TimerTask() {
                        @Override
                        public void run() {
                            updatesuccessful.dispose();
                        }
                    }, 1000);

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,ex);
                }
            } else {
                UpdateFailed updatefailed = new UpdateFailed();
                updatefailed.setVisible(true);
                new Timer().schedule(new TimerTask() {
                    public void run() {
                        updatefailed.dispose();
                    }
                }, 1000);
            }
        }
    }//GEN-LAST:event_UpdateRecordMouseClicked

    private void FirstNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FirstNameFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{1,20}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(FirstNameField.getText());
        if (!match.matches()) {
            FirstName.setForeground(Color.RED);
            temp = false;
        } else {
            FirstName.setForeground(Color.WHITE);
            temp = true;
        }
    }//GEN-LAST:event_FirstNameFieldFocusLost

    private void LastNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LastNameFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{1,20}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(LastNameField.getText());
        if (!match.matches()) {
            LastName.setForeground(Color.RED);
            temp = false;
        } else {
            LastName.setForeground(Color.WHITE);
            temp = true;
        }
    }//GEN-LAST:event_LastNameFieldFocusLost

    private void CNICFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CNICFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{5}[-][0-9]{7}[-][0-9]{1}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(CNICField.getText());
        if (!match.matches()) {
            CNIC.setForeground(Color.RED);
            temp = false;
        } else {
            CNIC.setForeground(Color.WHITE);
            temp = true;
        }
    }//GEN-LAST:event_CNICFieldFocusLost

    private void PhoneNoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PhoneNoFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{4}[-][0-9]{7}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(PhoneNoField.getText());
        if (!match.matches()) {
            PhoneNo.setForeground(Color.RED);
            temp = false;
        } else {
            PhoneNo.setForeground(Color.WHITE);
            temp = true;
        }
    }//GEN-LAST:event_PhoneNoFieldFocusLost

    private void EmailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(EmailField.getText());
        if (!match.matches()) {
            Email.setForeground(Color.RED);
            temp = false;
        } else {
            Email.setForeground(Color.WHITE);
            temp = true;
        }
    }//GEN-LAST:event_EmailFieldFocusLost

    private void UpdateRecordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UpdateRecordKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) {
            String Admin_ID = IDField.getText();
            String fName = FirstNameField.getText();
            String lName = LastNameField.getText();
            String cnic = CNICField.getText();
            String phoneno = PhoneNoField.getText();
            String gender = (String)Gender.getSelectedItem();
            String email = EmailField.getText();
            String password = PasswordField.getText();
            String value11 = status;

            if (fName.equals("") || lName.equals("") || cnic.equals("") || phoneno.equals("") || gender.equals("Select Gender") || email.equals("") || password.equals("")){
                FirstName.setForeground(Color.RED);
                LastName.setForeground(Color.RED);
                CNIC.setForeground(Color.RED);
                PhoneNo.setForeground(Color.RED);
                Gender.setBackground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (lName.equals("") || cnic.equals("") || phoneno.equals("") || gender.equals("Select Gender") || email.equals("") || password.equals("")){
                LastName.setForeground(Color.RED);
                CNIC.setForeground(Color.RED);
                PhoneNo.setForeground(Color.RED);
                Gender.setBackground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if(cnic.equals("") || phoneno.equals("") || gender.equals("Select Gender") || email.equals("") || password.equals("")){
                CNIC.setForeground(Color.RED);
                PhoneNo.setForeground(Color.RED);
                Gender.setBackground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if(phoneno.equals("") && gender.equals("Select Gender") || email.equals("") || password.equals("")){
                PhoneNo.setForeground(Color.RED);
                Gender.setBackground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);  
            } else if(gender.equals("Select Gender") || email.equals("") || password.equals("")){
                Gender.setBackground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if(email.equals("") || password.equals("")){
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if(password.equals("")){
                Password.setForeground(Color.RED);
            } else {
                if (temp == true) {
                    String query = "UPDATE `signup` SET `Admin_ID`='"+Admin_ID+"',`fName`='"+fName+"',`lName`='"+lName+"',`cnic`='"+cnic+"',`phoneno`='"+phoneno+"',`gender`='"+gender+"',`email`='"+email+"',`password`='"+password+"',`status`='"+value11+"' WHERE `Admin_ID`='"+Admin_ID+"'";
                    try {
                        pst = connect.prepareStatement(query);

                        pst.execute();
                        UpdateSuccessful updatesuccessful = new UpdateSuccessful();
                        updatesuccessful.setVisible(true);
                        new Timer().schedule(new TimerTask() {
                            @Override
                            public void run() {
                                updatesuccessful.dispose();
                            }
                        }, 1000);

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null,ex);
                    }
                } else {
                    UpdateFailed updatefailed = new UpdateFailed();
                    updatefailed.setVisible(true);
                    new Timer().schedule(new TimerTask() {
                        public void run() {
                            updatefailed.dispose();
                        }
                    }, 1000);
                }
            }
        }
    }//GEN-LAST:event_UpdateRecordKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Active;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel CNIC;
    private javax.swing.JTextField CNICField;
    private javax.swing.JTextField DevelopedBy;
    private javax.swing.JLabel Email;
    private javax.swing.JTextField EmailField;
    private javax.swing.JLabel Field;
    private javax.swing.JLabel FirstName;
    private javax.swing.JTextField FirstNameField;
    private javax.swing.JPanel Footer;
    private javax.swing.JComboBox<String> Gender;
    private javax.swing.JPanel Header;
    private javax.swing.JLabel ID;
    private javax.swing.JTextField IDField;
    private javax.swing.JRadioButton Inactive;
    private javax.swing.JLabel LastName;
    private javax.swing.JTextField LastNameField;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JLabel Password;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PhoneNo;
    private javax.swing.JTextField PhoneNoField;
    private javax.swing.JLabel Status;
    private javax.swing.JPanel UpdateAdminPanel;
    private javax.swing.JButton UpdateRecord;
    private javax.swing.JPanel UpdateRecordForm;
    // End of variables declaration//GEN-END:variables
}
