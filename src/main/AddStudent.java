/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.Timer;
import java.util.TimerTask;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class AddStudent extends javax.swing.JFrame {
    Connection connect = null;
    ResultSet result = null;
    PreparedStatement pst = null;
    
    boolean temp = true;
    
    String checkStatus,email;
    
    public AddStudent() {
        initComponents();
        // Set Title
        this.setTitle("Office and Class Allocation System");
        // Database Connection
        connect = Database.getConnection();
    }

    public AddStudent(String email) {
        initComponents();
        // Set Title
        this.setTitle("Office and Class Allocation System");
        // Database Connection
        connect = Database.getConnection();
        this.email = email;
    }
    
    // Check Email Already Exist or Not
    public boolean checkEmail (String email) {
        boolean checkEmail = false;
        String query = "SELECT * FROM `student` WHERE `email`=?";
        try {
            pst = connect.prepareStatement(query);
            pst.setString(1, EmailField.getText());
            result = pst.executeQuery();
            if (result.next()) {
                checkEmail = true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
        return checkEmail;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddStudentPanel = new javax.swing.JPanel();
        Header = new javax.swing.JPanel();
        Field = new javax.swing.JLabel();
        LogoutButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        AddRecordForm = new javax.swing.JPanel();
        FirstName = new javax.swing.JLabel();
        FirstNameField = new javax.swing.JTextField();
        LastName = new javax.swing.JLabel();
        LastNameField = new javax.swing.JTextField();
        PhoneNo = new javax.swing.JLabel();
        PhoneNoField = new javax.swing.JTextField();
        Gender = new javax.swing.JComboBox<>();
        Status = new javax.swing.JLabel();
        Active = new javax.swing.JRadioButton();
        Inactive = new javax.swing.JRadioButton();
        Department = new javax.swing.JComboBox<>();
        ProgramofStudy = new javax.swing.JLabel();
        ProgramField = new javax.swing.JTextField();
        CNIC = new javax.swing.JLabel();
        CNICField = new javax.swing.JTextField();
        Email = new javax.swing.JLabel();
        EmailField = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        AddRecord = new javax.swing.JButton();
        Footer = new javax.swing.JPanel();
        DevelopedBy = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        AddStudentPanel.setBackground(new java.awt.Color(54, 79, 107));
        AddStudentPanel.setPreferredSize(new java.awt.Dimension(900, 500));

        Header.setBackground(new java.awt.Color(63, 193, 201));
        Header.setPreferredSize(new java.awt.Dimension(900, 86));

        Field.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Field.setForeground(new java.awt.Color(245, 245, 245));
        Field.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Field.setText("Admin");

        LogoutButton.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        LogoutButton.setForeground(new java.awt.Color(54, 79, 107));
        LogoutButton.setText("Logout");
        LogoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogoutButton.setPreferredSize(new java.awt.Dimension(90, 30));
        LogoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutButtonMouseClicked(evt);
            }
        });
        LogoutButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LogoutButtonKeyPressed(evt);
            }
        });

        BackButton.setBackground(new java.awt.Color(54, 79, 107));
        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-back-32.png"))); // NOI18N
        BackButton.setBorder(null);
        BackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackButton.setPreferredSize(new java.awt.Dimension(35, 35));
        BackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackButtonMouseClicked(evt);
            }
        });
        BackButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BackButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addComponent(Field, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 728, Short.MAX_VALUE)))
                .addContainerGap())
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Field)
                .addContainerGap())
        );

        AddRecordForm.setOpaque(false);
        AddRecordForm.setPreferredSize(new java.awt.Dimension(470, 330));

        FirstName.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        FirstName.setForeground(new java.awt.Color(245, 245, 245));
        FirstName.setText("First Name");

        FirstNameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        FirstNameField.setMinimumSize(new java.awt.Dimension(64, 30));
        FirstNameField.setPreferredSize(new java.awt.Dimension(64, 30));
        FirstNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FirstNameFieldFocusLost(evt);
            }
        });

        LastName.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        LastName.setForeground(new java.awt.Color(245, 245, 245));
        LastName.setText("Last Name");

        LastNameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LastNameField.setMinimumSize(new java.awt.Dimension(64, 30));
        LastNameField.setPreferredSize(new java.awt.Dimension(64, 30));
        LastNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                LastNameFieldFocusLost(evt);
            }
        });

        PhoneNo.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        PhoneNo.setForeground(new java.awt.Color(245, 245, 245));
        PhoneNo.setText("Phone No");

        PhoneNoField.setForeground(new java.awt.Color(153, 153, 153));
        PhoneNoField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        PhoneNoField.setText("0333-1234567");
        PhoneNoField.setMinimumSize(new java.awt.Dimension(64, 30));
        PhoneNoField.setPreferredSize(new java.awt.Dimension(64, 30));
        PhoneNoField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PhoneNoFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PhoneNoFieldFocusLost(evt);
            }
        });

        Gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female" }));
        Gender.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Gender.setPreferredSize(new java.awt.Dimension(64, 30));

        Status.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        Status.setForeground(new java.awt.Color(245, 245, 245));
        Status.setText("Status");

        Active.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Active.setForeground(new java.awt.Color(245, 245, 245));
        Active.setText("Active");
        Active.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActiveMouseClicked(evt);
            }
        });
        Active.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ActiveKeyPressed(evt);
            }
        });

        Inactive.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Inactive.setForeground(new java.awt.Color(245, 245, 245));
        Inactive.setText("In-Active");
        Inactive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InactiveMouseClicked(evt);
            }
        });
        Inactive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InactiveKeyPressed(evt);
            }
        });

        Department.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Department", "Department of Computer Science", "Department of English", "Department of Mathematics", "Department of Physics" }));
        Department.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Department.setPreferredSize(new java.awt.Dimension(64, 30));

        ProgramofStudy.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        ProgramofStudy.setForeground(new java.awt.Color(245, 245, 245));
        ProgramofStudy.setText("Program");

        ProgramField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        ProgramField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ProgramField.setPreferredSize(new java.awt.Dimension(64, 30));

        CNIC.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        CNIC.setForeground(new java.awt.Color(245, 245, 245));
        CNIC.setText("CNIC");

        CNICField.setForeground(new java.awt.Color(153, 153, 153));
        CNICField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        CNICField.setText("00000-0000000-0");
        CNICField.setMinimumSize(new java.awt.Dimension(64, 30));
        CNICField.setPreferredSize(new java.awt.Dimension(64, 30));
        CNICField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CNICFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CNICFieldFocusLost(evt);
            }
        });

        Email.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        Email.setForeground(new java.awt.Color(245, 245, 245));
        Email.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Email.setText("Email");

        EmailField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        EmailField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        EmailField.setPreferredSize(new java.awt.Dimension(64, 30));
        EmailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                EmailFieldFocusLost(evt);
            }
        });

        Password.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        Password.setForeground(new java.awt.Color(245, 245, 245));
        Password.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Password.setText("Password");

        PasswordField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        PasswordField.setMinimumSize(new java.awt.Dimension(64, 30));
        PasswordField.setPreferredSize(new java.awt.Dimension(90, 30));

        AddRecord.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        AddRecord.setForeground(new java.awt.Color(54, 79, 107));
        AddRecord.setText("Add Record");
        AddRecord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddRecord.setPreferredSize(new java.awt.Dimension(90, 30));
        AddRecord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddRecordMouseClicked(evt);
            }
        });
        AddRecord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AddRecordKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout AddRecordFormLayout = new javax.swing.GroupLayout(AddRecordForm);
        AddRecordForm.setLayout(AddRecordFormLayout);
        AddRecordFormLayout.setHorizontalGroup(
            AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddRecordFormLayout.createSequentialGroup()
                .addGap(371, 371, 371)
                .addComponent(AddRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(AddRecordFormLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddRecordFormLayout.createSequentialGroup()
                        .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AddRecordFormLayout.createSequentialGroup()
                                .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FirstName)
                                    .addComponent(FirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(58, 60, Short.MAX_VALUE)
                                .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LastName)
                                    .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddRecordFormLayout.createSequentialGroup()
                                .addComponent(PhoneNo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddRecordFormLayout.createSequentialGroup()
                                .addComponent(PhoneNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Gender, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(131, 131, 131))
                    .addGroup(AddRecordFormLayout.createSequentialGroup()
                        .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddRecordFormLayout.createSequentialGroup()
                                .addComponent(Status)
                                .addGap(18, 18, 18)
                                .addComponent(Active)
                                .addGap(32, 32, 32)
                                .addComponent(Inactive))
                            .addComponent(CNIC)
                            .addComponent(CNICField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Department, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProgramofStudy)
                    .addComponent(Email)
                    .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProgramField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Password))
                .addGap(30, 30, 30))
        );
        AddRecordFormLayout.setVerticalGroup(
            AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddRecordFormLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddRecordFormLayout.createSequentialGroup()
                        .addComponent(Department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(ProgramofStudy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProgramField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Email)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Password)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddRecordFormLayout.createSequentialGroup()
                        .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddRecordFormLayout.createSequentialGroup()
                                .addComponent(FirstName)
                                .addGap(6, 6, 6)
                                .addComponent(FirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddRecordFormLayout.createSequentialGroup()
                                .addComponent(LastName)
                                .addGap(6, 6, 6)
                                .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PhoneNo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PhoneNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CNIC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CNICField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddRecordFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Status)
                            .addComponent(Active)
                            .addComponent(Inactive))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(AddRecord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Footer.setBackground(new java.awt.Color(63, 193, 201));
        Footer.setPreferredSize(new java.awt.Dimension(0, 30));

        DevelopedBy.setEditable(false);
        DevelopedBy.setBackground(new java.awt.Color(63, 193, 201));
        DevelopedBy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        DevelopedBy.setForeground(new java.awt.Color(255, 255, 255));
        DevelopedBy.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        DevelopedBy.setText("Developed By: Hafiz Muhammad Saad");
        DevelopedBy.setBorder(null);
        DevelopedBy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DevelopedBy.setFocusable(false);
        DevelopedBy.setHighlighter(null);

        javax.swing.GroupLayout FooterLayout = new javax.swing.GroupLayout(Footer);
        Footer.setLayout(FooterLayout);
        FooterLayout.setHorizontalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DevelopedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FooterLayout.setVerticalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DevelopedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout AddStudentPanelLayout = new javax.swing.GroupLayout(AddStudentPanel);
        AddStudentPanel.setLayout(AddStudentPanelLayout);
        AddStudentPanelLayout.setHorizontalGroup(
            AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStudentPanelLayout.createSequentialGroup()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(Footer, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(AddStudentPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(AddRecordForm, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AddStudentPanelLayout.setVerticalGroup(
            AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStudentPanelLayout.createSequentialGroup()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(AddRecordForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(Footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AddStudentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AddStudentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutButtonMouseClicked
        // TODO add your handling code here:
        HomePage homepage = new HomePage();
        homepage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutButtonMouseClicked

    private void LogoutButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LogoutButtonKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            HomePage homepage = new HomePage();
            homepage.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_LogoutButtonKeyPressed

    private void BackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseClicked
        // TODO add your handling code here:
        new StudentPage(email).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackButtonMouseClicked

    private void BackButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BackButtonKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            new StudentPage(email).setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_BackButtonKeyPressed

    private void PhoneNoFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PhoneNoFieldFocusGained
        // TODO add your handling code here:
        if (PhoneNoField.getText().trim().equals("0333-1234567")) {
            PhoneNoField.setText("");
            PhoneNoField.setForeground(new Color(153,153,153));
        }
        PhoneNoField.setForeground(Color.BLACK);
    }//GEN-LAST:event_PhoneNoFieldFocusGained

    private void PhoneNoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PhoneNoFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{4}[-][0-9]{7}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(PhoneNoField.getText());
        if (!match.matches()) {
            PhoneNo.setForeground(Color.RED);
            temp = false;
        } else {
            PhoneNo.setForeground(Color.WHITE);
            temp = true;
        }
        if (PhoneNoField.getText().trim().equals("")) {
            PhoneNoField.setText("0333-1234567");
            PhoneNoField.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_PhoneNoFieldFocusLost

    private void ActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActiveMouseClicked
        // TODO add your handling code here:
        checkStatus = "Active";
        Active.setSelected(true);
        Inactive.setSelected(false);
    }//GEN-LAST:event_ActiveMouseClicked

    private void ActiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ActiveKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            checkStatus = "Active";
            Active.setSelected(true);
            Inactive.setSelected(false);
        }
    }//GEN-LAST:event_ActiveKeyPressed

    private void InactiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InactiveMouseClicked
        // TODO add your handling code here:
        checkStatus = "Active";
        Active.setSelected(false);
        Inactive.setSelected(true);
    }//GEN-LAST:event_InactiveMouseClicked

    private void InactiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InactiveKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            checkStatus = "Active";
            Active.setSelected(false);
            Inactive.setSelected(true);
        }
    }//GEN-LAST:event_InactiveKeyPressed

    private void CNICFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CNICFieldFocusGained
        // TODO add your handling code here:
        if (CNICField.getText().trim().equals("00000-0000000-0")) {
            CNICField.setText("");
            CNICField.setForeground(new Color(153,153,153));
        }
        CNICField.setForeground(Color.BLACK);
    }//GEN-LAST:event_CNICFieldFocusGained

    private void CNICFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CNICFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{5}[-][0-9]{7}[-][0-9]{1}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(CNICField.getText());
        if (!match.matches()) {
            CNIC.setForeground(Color.RED);
            temp = false;
        } else {
            CNIC.setForeground(Color.WHITE);
            temp = true;
        }
        if (CNICField.getText().trim().equals("")) {
            CNICField.setText("00000-0000000-0");
            CNICField.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_CNICFieldFocusLost

    private void FirstNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FirstNameFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{1,20}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(FirstNameField.getText());
        if (!match.matches()) {
            FirstName.setForeground(Color.RED);
            temp = false;
        } else {
            FirstName.setForeground(Color.WHITE);
            temp = true;
        }
    }//GEN-LAST:event_FirstNameFieldFocusLost

    private void LastNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LastNameFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{1,20}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(LastNameField.getText());
        if (!match.matches()) {
            LastName.setForeground(Color.RED);
            temp = false;
        } else {
            LastName.setForeground(Color.WHITE);
            temp = true;
        }
    }//GEN-LAST:event_LastNameFieldFocusLost

    private void EmailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFieldFocusLost
        // TODO add your handling code here:
        String PATTERN = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(EmailField.getText());
        if (!match.matches()) {
            Email.setForeground(Color.RED);
            temp = false;
        } else {
            Email.setForeground(Color.WHITE);
            temp = true;
        }
    }//GEN-LAST:event_EmailFieldFocusLost

    private void AddRecordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddRecordMouseClicked
        // TODO add your handling code here:
        if(Active.isSelected()) {
            checkStatus = "Active";
        } else if (Inactive.isSelected()) {
            checkStatus = "In-Active";
        }
        String fName = FirstNameField.getText();
        String lName = LastNameField.getText();
        String cnic = CNICField.getText();
        String phoneno = PhoneNoField.getText();
        String gender = (String)Gender.getSelectedItem();
        String status = checkStatus;
        String department = (String)Department.getSelectedItem();
        String program = ProgramField.getText();
        String email = EmailField.getText();
        String password = PasswordField.getText();
        
        if (fName.equals("") || lName.equals("") || cnic.equals("00000-0000000-0") || phoneno.equals("0333-1234567") || gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")){
            FirstName.setForeground(Color.RED);
            LastName.setForeground(Color.RED);
            CNIC.setForeground(Color.RED);
            PhoneNo.setForeground(Color.RED);
            Gender.setBackground(Color.RED);
            Status.setForeground(Color.RED);
            Department.setBackground(Color.RED);
            ProgramofStudy.setForeground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (lName.equals("") || cnic.equals("00000-0000000-0") || phoneno.equals("0333-1234567") || gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
            LastName.setForeground(Color.RED);
            CNIC.setForeground(Color.RED);
            PhoneNo.setForeground(Color.RED);
            Gender.setBackground(Color.RED);
            Status.setForeground(Color.RED);
            Department.setBackground(Color.RED);
            ProgramofStudy.setForeground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (cnic.equals("00000-0000000-0") || phoneno.equals("0333-1234567") || gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
            CNIC.setForeground(Color.RED);
            PhoneNo.setForeground(Color.RED);
            Gender.setBackground(Color.RED);
            Status.setForeground(Color.RED);
            Department.setBackground(Color.RED);
            ProgramofStudy.setForeground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (phoneno.equals("0333-1234567") || gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
            PhoneNo.setForeground(Color.RED);
            Gender.setBackground(Color.RED);
            Status.setForeground(Color.RED);
            Department.setBackground(Color.RED);
            ProgramofStudy.setForeground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
            Gender.setBackground(Color.RED);
            Status.setForeground(Color.RED);
            Department.setBackground(Color.RED);
            ProgramofStudy.setForeground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
            Status.setForeground(Color.RED);
            Department.setBackground(Color.RED);
            ProgramofStudy.setForeground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
            Department.setBackground(Color.RED);
            ProgramofStudy.setForeground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (program.equals("") || email.equals("") || password.equals("")) {
            ProgramofStudy.setForeground(Color.RED);
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (email.equals("") || password.equals("")) {
            Email.setForeground(Color.RED);
            Password.setForeground(Color.RED);
        } else if (password.equals("")) {
            Password.setForeground(Color.RED);
        } else if (checkEmail(email)) {
            EmailAlreadyExists emailalreadyexists = new EmailAlreadyExists();
            emailalreadyexists.setVisible(true);
            new Timer().schedule(new TimerTask() {
                @Override
                public void run() {
                    emailalreadyexists.dispose();
                }
            }, 1000);
        } else {
            if (temp == true) {
                String query = "INSERT INTO `student`(`fName`, `lName`, `cnic`, `phoneno`, `gender`, `status`, `department`, `program`, `email`, `password`) VALUES (?,?,?,?,?,?,?,?,?,?)";
                try {
                    pst = connect.prepareStatement(query);

                    pst.setString(1, FirstNameField.getText());
                    pst.setString(2, LastNameField.getText());
                    pst.setString(3, CNICField.getText());
                    pst.setString(4, PhoneNoField.getText());
                    pst.setString(5, (String)Gender.getSelectedItem());
                    pst.setString(6, status);
                    pst.setString(7, (String)Department.getSelectedItem());
                    pst.setString(8, ProgramField.getText());
                    pst.setString(9, EmailField.getText());
                    pst.setString(10, PasswordField.getText());

                    pst.execute();
                    DataAdded dataadded = new DataAdded();
                    dataadded.setVisible(true);
                    new Timer().schedule(new TimerTask() {
                        @Override
                        public void run() {
                            dataadded.dispose();
                        }
                    }, 1000);

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,ex);
                }
            } else {
                
            }
        }
    }//GEN-LAST:event_AddRecordMouseClicked

    private void AddRecordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddRecordKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(Active.isSelected()) {
                checkStatus = "Active";
            } else if (Inactive.isSelected()) {
                checkStatus = "In-Active";
            }
            String fName = FirstNameField.getText();
            String lName = LastNameField.getText();
            String cnic = CNICField.getText();
            String phoneno = PhoneNoField.getText();
            String gender = (String)Gender.getSelectedItem();
            String status = checkStatus;
            String department = (String)Department.getSelectedItem();
            String program = ProgramField.getText();
            String email = EmailField.getText();
            String password = PasswordField.getText();

            if (fName.equals("") || lName.equals("") || cnic.equals("00000-0000000-0") || phoneno.equals("0333-1234567") || gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")){
                FirstName.setForeground(Color.RED);
                LastName.setForeground(Color.RED);
                CNIC.setForeground(Color.RED);
                PhoneNo.setForeground(Color.RED);
                Gender.setBackground(Color.RED);
                Status.setForeground(Color.RED);
                Department.setBackground(Color.RED);
                ProgramofStudy.setForeground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (lName.equals("") || cnic.equals("00000-0000000-0") || phoneno.equals("0333-1234567") || gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
                LastName.setForeground(Color.RED);
                CNIC.setForeground(Color.RED);
                PhoneNo.setForeground(Color.RED);
                Gender.setBackground(Color.RED);
                Status.setForeground(Color.RED);
                Department.setBackground(Color.RED);
                ProgramofStudy.setForeground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (cnic.equals("00000-0000000-0") || phoneno.equals("0333-1234567") || gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
                CNIC.setForeground(Color.RED);
                PhoneNo.setForeground(Color.RED);
                Gender.setBackground(Color.RED);
                Status.setForeground(Color.RED);
                Department.setBackground(Color.RED);
                ProgramofStudy.setForeground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (phoneno.equals("0333-1234567") || gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
                PhoneNo.setForeground(Color.RED);
                Gender.setBackground(Color.RED);
                Status.setForeground(Color.RED);
                Department.setBackground(Color.RED);
                ProgramofStudy.setForeground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (gender.equals("Select Gender") || status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
                Gender.setBackground(Color.RED);
                Status.setForeground(Color.RED);
                Department.setBackground(Color.RED);
                ProgramofStudy.setForeground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (status.equals("checkStatus") || department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
                Status.setForeground(Color.RED);
                Department.setBackground(Color.RED);
                ProgramofStudy.setForeground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (department.equals("Select Department") || program.equals("") || email.equals("") || password.equals("")) {
                Department.setBackground(Color.RED);
                ProgramofStudy.setForeground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (program.equals("") || email.equals("") || password.equals("")) {
                ProgramofStudy.setForeground(Color.RED);
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (email.equals("") || password.equals("")) {
                Email.setForeground(Color.RED);
                Password.setForeground(Color.RED);
            } else if (password.equals("")) {
                Password.setForeground(Color.RED);
            } else if (checkEmail(email)) {
                EmailAlreadyExists emailalreadyexists = new EmailAlreadyExists();
                emailalreadyexists.setVisible(true);
                new Timer().schedule(new TimerTask() {
                    @Override
                    public void run() {
                        emailalreadyexists.dispose();
                    }
                }, 1000);
            } else {
                if (temp == true) {
                    String query = "INSERT INTO `student`(`fName`, `lName`, `cnic`, `phoneno`, `gender`, `status`, `department`, `program`, `email`, `password`) VALUES (?,?,?,?,?,?,?,?,?,?)";
                    try {
                        pst = connect.prepareStatement(query);

                        pst.setString(1, FirstNameField.getText());
                        pst.setString(2, LastNameField.getText());
                        pst.setString(3, CNICField.getText());
                        pst.setString(4, PhoneNoField.getText());
                        pst.setString(5, (String)Gender.getSelectedItem());
                        pst.setString(6, status);
                        pst.setString(7, (String)Department.getSelectedItem());
                        pst.setString(8, ProgramField.getText());
                        pst.setString(9, EmailField.getText());
                        pst.setString(10, PasswordField.getText());

                        pst.execute();
                        DataAdded dataadded = new DataAdded();
                        dataadded.setVisible(true);
                        new Timer().schedule(new TimerTask() {
                            @Override
                            public void run() {
                                dataadded.dispose();
                            }
                        }, 1000);

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null,ex);
                    }
                } else {

                }
            }
        }
    }//GEN-LAST:event_AddRecordKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Active;
    private javax.swing.JButton AddRecord;
    private javax.swing.JPanel AddRecordForm;
    private javax.swing.JPanel AddStudentPanel;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel CNIC;
    private javax.swing.JTextField CNICField;
    private javax.swing.JComboBox<String> Department;
    private javax.swing.JTextField DevelopedBy;
    private javax.swing.JLabel Email;
    private javax.swing.JTextField EmailField;
    private javax.swing.JLabel Field;
    private javax.swing.JLabel FirstName;
    private javax.swing.JTextField FirstNameField;
    private javax.swing.JPanel Footer;
    private javax.swing.JComboBox<String> Gender;
    private javax.swing.JPanel Header;
    private javax.swing.JRadioButton Inactive;
    private javax.swing.JLabel LastName;
    private javax.swing.JTextField LastNameField;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JLabel Password;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PhoneNo;
    private javax.swing.JTextField PhoneNoField;
    private javax.swing.JTextField ProgramField;
    private javax.swing.JLabel ProgramofStudy;
    private javax.swing.JLabel Status;
    // End of variables declaration//GEN-END:variables
}
